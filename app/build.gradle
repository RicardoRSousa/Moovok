apply plugin: 'com.android.application'
apply plugin: 'com.google.gms.google-services'
apply plugin: 'com.google.firebase.crashlytics'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'kotlin-android-extensions'
apply plugin: "androidx.navigation.safeargs.kotlin"
apply plugin: 'dagger.hilt.android.plugin'
apply plugin: 'com.google.firebase.firebase-perf'


android {
    compileSdkVersion 29
    buildToolsVersion "29.0.3"

    packagingOptions {
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/license.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/notice.txt'
        exclude 'META-INF/ASL2.0'
        exclude("META-INF/*.kotlin_module")
    }

    def versionPropsFile = file('version.properties')

    if (versionPropsFile.canRead()) {
        def Properties versionProps = new Properties()

        versionProps.load(new FileInputStream(versionPropsFile))
        def name = versionProps['VERSION_NAME']
        def code = versionProps['VERSION_CODE'].toInteger()
        versionProps['VERSION_CODE']=code.toString()
        versionProps.store(versionPropsFile.newWriter(), null)

        defaultConfig {
            applicationId "com.ricardojrsousa.movook"
            minSdkVersion 23
            targetSdkVersion 29
            versionCode code
            versionName name

            testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        }
    }
    else {
        throw new GradleException("Could not read version.properties!")
    }

    increaseVersionCode()

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }


    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8.toString()
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
}

def retrofit_version = "2.7.2"

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation project(':core')
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation "androidx.recyclerview:recyclerview:1.1.0"
    implementation "androidx.recyclerview:recyclerview-selection:1.1.0-rc03"
    implementation "androidx.cardview:cardview:1.0.0"

    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'androidx.core:core-ktx:1.3.2'
    implementation 'com.squareup.picasso:picasso:2.71828'

    //Firebase
    implementation 'com.google.firebase:firebase-analytics-ktx:17.6.0'
    implementation 'com.google.firebase:firebase-crashlytics:17.2.2'
    implementation 'com.google.firebase:firebase-perf:19.0.9'
    implementation 'com.google.firebase:firebase-storage-ktx:19.2.0'

    implementation 'com.redbooth:WelcomeCoordinator:1.0.1'
    implementation 'com.github.guilhe:circular-progress-view:1.4.2'
    implementation 'de.hdodenhof:circleimageview:3.1.0'
    implementation 'com.github.okdroid:checkablechipview:2.0.0'
    implementation 'com.google.android:flexbox:2.0.1'
    implementation 'com.github.turkergoksu:PercentageView:1.0.3'
    implementation 'com.github.Spikeysanju:ZoomRecylerLayout:1.0'

    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    implementation "com.squareup.retrofit2:adapter-rxjava2:$retrofit_version"
    implementation "com.squareup.retrofit2:converter-gson:2.6.0"
    implementation 'com.squareup.okhttp3:logging-interceptor:3.14.7'
    implementation "com.squareup.retrofit2:converter-gson:2.6.0"

    implementation 'com.github.BeppiMenozzi:TriStateToggleButton:1.1.4'
    implementation 'com.github.Jay-Goo:RangeSeekBar:3.0.0'
    implementation 'com.github.medyo:fancybuttons:1.9.1'
    implementation "com.airbnb.android:lottie:3.4.4"
    implementation 'com.google.android.gms:play-services-basement:17.4.0'
    implementation 'com.google.android.material:material:1.3.0-alpha03'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.2'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation "androidx.viewpager2:viewpager2:1.0.0"
    implementation 'androidx.lifecycle:lifecycle-extensions:2.2.0'
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.2.0'
    implementation "androidx.navigation:navigation-fragment-ktx:$nav_version"
    implementation "androidx.navigation:navigation-ui-ktx:$nav_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutines_version"
    implementation 'com.wajahatkarim3.EasyFlipView:EasyFlipView:3.0.0'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-play-services:1.1.1'
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutines_version"
    implementation "androidx.room:room-runtime:$room_version"
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    kapt "androidx.room:room-compiler:$room_version"
    implementation "androidx.room:room-ktx:$room_version"

    implementation 'com.google.dagger:hilt-android:2.28-alpha'
    implementation 'androidx.hilt:hilt-lifecycle-viewmodel:1.0.0-alpha02'

    debugImplementation 'com.squareup.leakcanary:leakcanary-android:2.5'

    kapt 'com.google.dagger:hilt-android-compiler:2.28-alpha'
    kapt 'androidx.hilt:hilt-compiler:1.0.0-alpha02'


    testImplementation 'junit:junit:4.13'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'
    implementation 'androidx.lifecycle:lifecycle-livedata-ktx:2.2.0'
}

def increaseVersionCode() {
    def versionPropsFile = file('version.properties')
    gradle.taskGraph.whenReady { taskGraph ->
        if (taskGraph.hasTask(assembleRelease) || taskGraph.hasTask(bundleRelease)) {
            if (versionPropsFile.canRead()) {
                def Properties versionProps = new Properties()

                versionProps.load(new FileInputStream(versionPropsFile))

                def build = versionProps['VERSION_BUILD'].toInteger() + 1
                def code = versionProps['VERSION_CODE'].toInteger() + 1

                versionProps['VERSION_BUILD'] = build.toString()
                versionProps['VERSION_CODE'] = code.toString()
                versionProps.store(versionPropsFile.newWriter(), null)
            } else {
                throw new GradleException("Could not read version.properties!")
            }
        }
    }
}
